{"version":3,"file":"static/js/35.9aab232a.chunk.js","mappings":"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","sources":["components/form/Form.styled.jsx","components/loader/Loader.styled.jsx","components/loader/Loader.jsx","components/card/Card.styled.jsx","components/card/Card.jsx","components/history/History.styled.jsx","components/history/History.jsx","components/form/Form.jsx","pages/CheckTtn/CheckTtn.styled.jsx","pages/CheckTtn/CheckTtn.jsx","redux/selectors.js"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { Form, Field, ErrorMessage } from 'formik';\r\n\r\nexport const FormEl = styled(Form)`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  min-height: 64px;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    min-height: 84px;\r\n  }\r\n`;\r\n\r\nexport const InputEl = styled(Field)`\r\n  font-size: 16px;\r\n  width: 250px;\r\n  height: 20px;\r\n  padding: 5px;\r\n  \r\n  border-radius: 8px;\r\n  \r\n  border-color: #fa4a3b;\r\n  font-weight: 700;\r\n  outline: none;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    height: 26px;\r\n    margin-bottom: 4px;\r\n  }\r\n`;\r\n\r\nexport const SubmitButton = styled.button`\r\n  width: 150px;\r\n  height: 40px;\r\n  border: 1px solid black;\r\n  \r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n  color: #3c3636;\r\n\r\n  padding: 5px;\r\n  transition: all 0.3s linear;\r\n\r\n  &:hover {\r\n    color: #fa4a3b;\r\n    background-color: #c2c2c2;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    margin-left: 30px;\r\n  }\r\n`;\r\n\r\nexport const Error = styled(ErrorMessage)`\r\n  width: 250px;\r\n  text-align: center;\r\n  color: red;\r\n\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n\r\n  \r\n  \r\n`;\r\n\r\nexport const InfoError = styled.div`\r\n  width: 250px;\r\n  text-align: center;\r\n  \r\n  margin-bottom: 1px;\r\n  font-weight: 500;\r\n  font-size: 12px;\r\n  color: ${props => {\r\n    return props.error ? 'red' : 'transparent';\r\n  }};\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const Spinner = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  backdrop-filter: invert(15%);\r\n`;","import { RotatingLines } from 'react-loader-spinner';\r\nimport { Spinner } from './Loader.styled';\r\nexport const Loader = () => {\r\n  return (\r\n    <Spinner>\r\n      <RotatingLines\r\n  strokeColor=\"red\"\r\n  strokeWidth=\"5\"\r\n  animationDuration=\"0.75\"\r\n  width=\"96\"\r\n  visible={true}\r\n/>\r\n    </Spinner>\r\n  );\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const InfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-top: 15px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    \r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nexport const InfoEl = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n\r\n  width: 280px;\r\n  height: 80px;\r\n  font-weight: 700;\r\n  color: #858585;\r\n  font-size: 16px;\r\n  background-color: #d8d8dd;\r\n  border-radius: 8px;\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n  padding: 2px;\r\n\r\n  height: 100%;\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 480px;\r\n    height: 120px;\r\n    font-size: 20px;\r\n    margin-bottom: 20px;\r\n    padding: 10px;\r\n  }\r\n`;\r\n\r\nexport const InfoElContent = styled.div`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  color: black;\r\n  padding: 2px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 16px;\r\n    padding: 10px;\r\n  }\r\n`;","import { useSelector } from 'react-redux';\r\nimport { selectInfo } from '../../redux/selectors';\r\n\r\nimport {\r\n  InfoWrapper,\r\n  InfoEl,\r\n  InfoElContent,\r\n} from './Card.styled';\r\n\r\nexport const InfoCard = () => {\r\n  const cargoInfo = useSelector(selectInfo);\r\n  const {\r\n    Status,\r\n    StatusCode,\r\n    WarehouseRecipient,\r\n    WarehouseSender,\r\n    CitySender,\r\n    CityRecipient,\r\n  } = cargoInfo;\r\n  return (\r\n    <InfoWrapper>\r\n      <InfoEl>\r\n        Статус доставки:\r\n        {StatusCode === '3' ? (\r\n          <InfoEl>\r\n            Номер ТТН не знайдено. Перевірте номер та спробуйте ще раз\r\n          </InfoEl>\r\n        ) : (\r\n          <InfoElContent>{Status}</InfoElContent>\r\n        )}\r\n      </InfoEl>\r\n      <InfoEl>\r\n        Відправлено:\r\n        <InfoElContent>\r\n          {WarehouseSender}\r\n          <br />\r\n          Населений пункт: {CitySender}\r\n        </InfoElContent>\r\n      </InfoEl>\r\n      <InfoEl>\r\n        Отримано:\r\n        <InfoElContent>\r\n          {WarehouseRecipient}\r\n          <br />\r\n          Населений пункт: {CityRecipient}\r\n        </InfoElContent>\r\n      </InfoEl>\r\n    </InfoWrapper>\r\n  );\r\n};\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ListWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-top: 20px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-left: 50px;\r\n    padding-top: 0;\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nexport const ListHeader = styled.div`\r\n  width: 150px;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const ListEl = styled.ul`\r\n  list-style: none;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n  padding: 0;\r\n  \r\n\r\n  overflow-y: ${props => {\r\n    return props.requestHistory.length > 3 ? 'scroll' : 'hidden';\r\n}};\r\n  @media screen and (max-width: 767px) {\r\n    max-height: 100px;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    height: 315px;\r\n    overflow-y: ${props => {\r\n      return props.requestHistory.length > 9 ? 'scroll' : 'hidden';\r\n    }};\r\n  }\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 140px;\r\n  \r\n  padding: 5px;\r\n  text-align: center;\r\n  border-radius: 5px;\r\n  margin-bottom: 5px;\r\n  font-weight: 500;\r\n\r\n  background-color: #d8d8dd;\r\n  cursor: pointer;\r\n  transition: all 0.3s linear;\r\n\r\n  &:hover {\r\n    color: #fa4a3b;\r\n    background-color: #c2c2c2;\r\n  }\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const ClearButton = styled.button`\r\n  width: 150px;\r\n  height: 40px;\r\n  \r\n  border: 1px solid black;\r\n  \r\n  border-radius: 8px;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n  color: #3c3636;\r\n\r\n  transition: all 0.3s linear;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    color: #fa4a3b;\r\n    background-color: #c2c2c2;\r\n  }\r\n`;","import { updateSelectedNumber, clearRequestHistory } from '../../redux/slice';\r\nimport { selectNumbersList } from '../../redux/selectors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchInfo } from '../../redux/operations';\r\nimport { nanoid } from 'nanoid';\r\n\r\nimport {\r\n  ListWrapper,\r\n  ListHeader,\r\n  ListEl,\r\n  ListItem,\r\n  ClearButton,\r\n} from './History.styled';\r\n\r\nexport const RequestHistory = () => {\r\n  const requestHistory = useSelector(selectNumbersList);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const clearHistory = () => {\r\n    dispatch(clearRequestHistory());\r\n  };\r\n\r\n  const handleClick = clickedNumber => {\r\n    dispatch(updateSelectedNumber(clickedNumber));\r\n    dispatch(fetchInfo(clickedNumber));\r\n  };\r\n\r\n  return (\r\n    <ListWrapper>\r\n      <ListHeader>Історія пошуку</ListHeader>\r\n      <ListEl requestHistory={requestHistory}>\r\n        {requestHistory.slice().reverse().map(item => {\r\n          return (\r\n            <ListItem key={nanoid()}>\r\n              <div\r\n                onClick={() => {\r\n                  handleClick(item);\r\n                }}\r\n              >\r\n                {item}\r\n              </div>\r\n            </ListItem>\r\n          );\r\n        })}\r\n      </ListEl>\r\n      {requestHistory.length !== 0 && (\r\n        <ClearButton\r\n          type=\"button\"\r\n          onClick={() => {\r\n            clearHistory();\r\n          }}\r\n        >\r\n          Очистити історію\r\n        </ClearButton>\r\n      )}\r\n    </ListWrapper>\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchInfo } from '../../redux/operations';\r\nimport { selectError, selectSelectedNumber } from '../../redux/selectors';\r\n\r\nimport { Formik, useFormikContext } from 'formik';\r\n\r\nimport {\r\n  FormEl,\r\n  InputEl,\r\n  SubmitButton,\r\n  Error,\r\n  InfoError,\r\n  InputWrapper,\r\n} from './Form.styled';\r\n\r\nimport * as yup from 'yup';\r\nimport { useEffect } from 'react';\r\n\r\nconst schema = yup.object().shape({\r\n  ttnNumber: yup\r\n    .string()\r\n    .matches(/^\\d{14}$/, 'Введіть 14 цифр')\r\n    .required(\"Поле обов'язкове для заповнення\"),\r\n});\r\n\r\nconst initialValues = {\r\n  ttnNumber: '',\r\n};\r\n\r\nconst TtnInput = () => {\r\n  const { setFieldValue } = useFormikContext();\r\n\r\n  const ttnSelectedNumber = useSelector(selectSelectedNumber);\r\n\r\n  useEffect(() => {\r\n    setFieldValue('ttnNumber', ttnSelectedNumber);\r\n  }, [ttnSelectedNumber, setFieldValue]);\r\n\r\n  return (\r\n    <>\r\n      <InputEl type=\"text\" name=\"ttnNumber\" placeholder=\"Введіть номер накладної\" />\r\n      <Error name=\"ttnNumber\" component=\"div\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const SearchForm = () => {\r\n  const dispatch = useDispatch();\r\n  let error = useSelector(selectError);\r\n\r\n  const handleSubmit = values => {\r\n    dispatch(fetchInfo(values.ttnNumber));\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={schema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <FormEl>\r\n        <InputWrapper>\r\n          <TtnInput />\r\n          <InfoError error={error}>Невірний номер ТТН</InfoError>\r\n        </InputWrapper>\r\n        <SubmitButton type=\"submit\">Відстежити</SubmitButton>\r\n      </FormEl>\r\n    </Formik>\r\n  );\r\n};","import styled from '@emotion/styled';\r\n\r\nexport const InfoWrapper = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    padding-top: 30px;\r\n  }\r\n`;","import { InfoCard } from '../../components/card/Card';\r\nimport { RequestHistory } from '../../components/history/History';\r\nimport { SearchForm } from '../../components/form/Form';\r\n\r\nimport { InfoWrapper } from './CheckTtn.styled';\r\nimport { Loader } from '../../components/loader/Loader';\r\n\r\nimport { selectIsLoading } from '../../redux/selectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function CheckTtn() {\r\n  const isLoading = useSelector(selectIsLoading);\r\n  return (\r\n    <>\r\n      <SearchForm />\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : (\r\n        <InfoWrapper>\r\n          <InfoCard />\r\n          <RequestHistory />\r\n        </InfoWrapper>\r\n      )}\r\n    </>\r\n  );\r\n}","export const selectInfo = state => state.info.ttnInfo;\r\n\r\nexport const selectError = state => state.info.infoError;\r\n\r\nexport const selectNumbersList = state => state.info.ttnNumbersList;\r\n\r\nexport const selectSelectedNumber = state => state.info.selectedNumber;\r\n\r\nexport const selectDepartmentsList = state => state.info.departmentsList;\r\n\r\nexport const selectDepartmentsError = state => state.info.departmentsError;\r\n\r\nexport const selectPage = state => state.info.page;\r\n\r\nexport const selectCity = state => state.info.city;\r\n\r\nexport const selectTotalCount = state => state.info.totalCount;\r\n\r\nexport const selectIsLoading = state => state.info.isLoading;"],"names":["FormEl","styled","Form","_templateObject","_taggedTemplateLiteral","InputWrapper","div","_templateObject2","InputEl","Field","_templateObject3","SubmitButton","button","_templateObject4","Error","ErrorMessage","_templateObject5","InfoError","_templateObject6","props","error","Spinner","Loader","_jsx","children","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","InfoWrapper","InfoEl","InfoElContent","InfoCard","cargoInfo","useSelector","selectInfo","Status","StatusCode","WarehouseRecipient","WarehouseSender","CitySender","CityRecipient","_jsxs","ListWrapper","ListHeader","ListEl","ul","requestHistory","length","ListItem","li","ClearButton","RequestHistory","selectNumbersList","dispatch","useDispatch","slice","reverse","map","item","onClick","clickedNumber","updateSelectedNumber","fetchInfo","nanoid","type","clearRequestHistory","schema","yup","shape","ttnNumber","matches","required","initialValues","TtnInput","setFieldValue","useFormikContext","ttnSelectedNumber","selectSelectedNumber","useEffect","_Fragment","name","placeholder","component","SearchForm","selectError","Formik","validationSchema","onSubmit","values","CheckTtn","isLoading","selectIsLoading","state","info","ttnInfo","infoError","ttnNumbersList","selectedNumber","selectDepartmentsList","departmentsList","selectDepartmentsError","departmentsError","selectPage","page","selectCity","city","selectTotalCount","totalCount"],"sourceRoot":""}